<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.jobknowledge-mapper">

<!-- 전체태그 게시글 리스트 출력 -->
	<select id="jobknowledgeListData" resultType="JobKnowledgeVO" parameterType="hashmap">
		SELECT no, subject, content, tag, regdate, reply, num
		FROM (SELECT no, subject, content, tag, regdate, reply, rownum as num
		FROM (SELECT no, subject, content, tag, regdate, reply
		FROM jobknowledge WHERE root = 0 ORDER BY regdate desc))
		WHERE num BETWEEN #{start} AND #{end}
	</select>
<!-- 총 페이지 구하기 -->
	<select id="jobknowledgeTatalPage" resultType="int">
		SELECT CEIL(COUNT(*) / 10.0) FROM jobknowledge WHERE root = 0
	</select>
	
	
<!-- 태그별 게시글 리스트 출력 -->
	<select id="jobknowledgeListDataByTag" resultType="JobKnowledgeVO" parameterType="hashmap">
		SELECT no, subject, content, tag, regdate, reply, num
		FROM (SELECT no, subject, content, tag, regdate, reply, rownum as num
		FROM (SELECT no, subject, content, tag, regdate, reply 
		FROM jobknowledge WHERE tag = #{tag} AND root = 0 ORDER BY regdate desc))
		WHERE num BETWEEN #{start} AND #{end}
	</select>	
<!-- 태그별 총 페이지 구하기 -->
	<select id="jobknowledgeTatalPageByTag" resultType="int" parameterType="String">
		SELECT CEIL(COUNT(*) / 10.0) FROM jobknowledge WHERE tag = #{tag} AND root = 0
	</select>
	
	
	
	
	
	
	
<!-- 게시글 상세보기 -->
	<select id="jobknowledgeDetail" resultType="JobKnowledgeVO" parameterType="int">
		SELECT no, id, subject, content, regdate, hit, tag FROM jobknowledge WHERE no = #{no}
	</select>
<!-- 상세보기할 때 조회수 증가 -->
	<update id="jobknowledgeIncrementHit" parameterType="int">
		UPDATE jobknowledge SET hit = hit + 1 WHERE no = #{no}
	</update>
<!-- 상세보기할 때 답변글 가져오기 -->
	<select id="jobknowledgeDetailReply" resultType="JobKnowledgeVO" parameterType="int">
		SELECT no, id, subject, content, regdate, hit, tag FROM jobknowledge WHERE root = #{no} ORDER BY regdate
	</select>
	
	
	
	
	
<!-- 질문하기 -->
	<insert id="jobknowledgeInsertAnswer" parameterType="JobKnowledgeVO">
		INSERT INTO jobknowledge(no, id, subject, content, regdate, hit, group_id, group_step, root, depth, comment_id, tag, adopt, reply) 
		VALUES(
		(SELECT (MAX(no)) FROM jobknowledge)+1,
		#{id},																	<!-- 아이디를 세션의 아이디로 지정할 것 -->
		#{subject},
		#{content},
		SYSDATE,
		0,
		(SELECT (MAX(no)) FROM jobknowledge)+1,
		0,
		0,
		0,
		(SELECT (MAX(no)) FROM jobknowledge)+1,
		#{tag},
		0,
		0
		)
	</insert>
	
	
	
	
	
<!-- 답변달기 -->
	<insert id="jobknowledgeReply" parameterType="hashmap">
		INSERT INTO jobknowledge(no, id, subject, content, regdate, hit, group_id, group_step, root, depth, comment_id, tag, adopt, reply) 
		VALUES(
		(SELECT (MAX(no)) FROM jobknowledge)+1,
		#{id},
		'답변제목',
		#{content},
		SYSDATE,
		0,
		(SELECT no FROM jobknowledge WHERE no = #{no}),
		(SELECT group_step FROM jobknowledge WHERE no = #{no})+1,
		(SELECT no FROM jobknowledge WHERE no = #{no}),
		(SELECT depth FROM jobknowledge WHERE no = #{no})+1,
		(SELECT no FROM jobknowledge WHERE no = #{no})+1,
		'답변',
		0,
		0
		)
	</insert>
<!-- 답변달릴시 원 질문글 답변수 증가 -->
	<update id="jobknowledgeUpdateReply" parameterType="int">
		UPDATE jobknowledge set reply = reply + 1 WHERE no = #{no}
	</update>
<!-- 답변작성시에 group_step 증가 -->
	<update id="jobknowledgeUpdateGroupStep" parameterType="hashmap">
		UPDATE jobknowledge set group_step = group_step+1 WHERE group_id = #{group_id} AND group_step &gt; #{group_step}
	</update>
	
	
	
	
	
<!-- 게시글 수정하기 -->
	<update id="jobknowledgeModifyBoard_ok" parameterType="hashmap">
		UPDATE jobknowledge SET
		content = #{content},
		subject = #{subject}
		WHERE no = #{no}
	</update>
	
	
	
	
<!-- 게시글 삭제하기 -->
	<delete id="jobknowledgeDeleteBoard" parameterType="int">
		DELETE FROM jobknowledge WHERE no = #{no}
	</delete>
<!-- 답변 삭제하기 -->
	<delete id="jobknowledgeDeleteReply" parameterType="int">
		DELETE FROM jobknowledge WHERE root = #{no}
	</delete>
	
	
	
<!-- 답변만 삭제하기 -->
	<!-- <delete id="deleteReplyAlone" parameterType="int">
		DELETE FROM jobknowledge WHERE no = #{rno}
	</delete> -->
	<delete id="deleteReplyAlone" parameterType="int">
		DELETE FROM jobknowledge WHERE no = #{rno}
	</delete>
<!-- 답변만 삭제시 질문글의 답변수 감소 -->
	<update id="declineBoardHit" parameterType="int">
		UPDATE jobknowledge SET reply = reply - 1 WHERE no = #{bno}
	</update>
	
	
	
	
<!-- 게시물 검색하기 -->
	<select id="searchBoard" resultType="JobKnowledgeVO" parameterType="hashmap">
		<!-- SELECT no, subject, content, tag, regdate, reply
		FROM jobknowledge WHERE root = 0 AND #{finding} LIKE '%'||#{voca}||'%' ORDER BY regdate desc -->
		SELECT no, subject, content, tag, regdate, reply, num
		FROM (SELECT no, subject, content, tag, regdate, reply, rownum as num
		FROM (SELECT no, subject, content, tag, regdate, reply
		FROM jobknowledge WHERE root = 0 AND ${finding} LIKE '%'||'${voca}'||'%'ORDER BY regdate desc))
		WHERE num BETWEEN #{start} AND #{end}
	</select>
	<select id="searchTotalPage" resultType="int" parameterType="hashmap">
		SELECT CEIL(COUNT(*) / 10.0) FROM jobknowledge WHERE #{finding} LIKE '%' || #{voca} || '%' AND root = 0
	</select>
	
	
	
<!-- 스크랩 -->
	<!-- 스크랩 저장  -->
	<insert id="scrapInsert" parameterType="JobKnowledgeScrapVO">
	INSERT INTO JobKnowledgeScrap VALUES(
	(SELECT NVL(MAX(no)+1,1) FROM JobKnowledgeScrap),#{id},#{mno}
	)
	</insert>
	<!-- 스크랩 리스트 가져오기 -->
	<select id="scrapListData" parameterType="String" resultType="JobKnowledgeScrapVO">
	SELECT * FROM JobKnowledgeScrap
	WHERE id=#{id}
	ORDER BY no DESC
	</select>
	<!-- 스크랩 여부 확인 -->
	<select id="scrapCount" parameterType="JobKnowledgeScrapVO" resultType="int">
	SELECT COUNT(*) FROM JobKnowledgeScrap
	WHERE id=#{id} AND mno=#{mno}
	</select>
	<!-- 스크랩 취소  -->
	<delete id="scrapDelete" parameterType="int">
	DELETE FROM JobKnowledgeScrap
	WHERE mno=#{no}
	</delete>
</mapper>